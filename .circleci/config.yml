# Python CircleCI 2.0 configuration file
version: 2
references:
  container_python36: &container_python36
    docker:
      - image: circleci/python:3.6.2
      - name: localstack
        image: localstack/localstack
    working_dir: ~/project

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v0-repo-{{ .Branch }}-{{ .Revision }}
        - v0-repo-{{ .Branch }}
        - v0-repo

  save_repo: &save_repo
    save_cache:
      key: v0-repo-{{ .Branch }}-{{ .Revision }}
      paths:
        - ~/project

  restore_dependencies36: &restore_dependencies36
    restore_cache:
      keys:
        - v0-dependencies36-{{ checksum "requirements.txt" }}
        - v0-dependencies36

jobs:
  install_and_test_36:
    <<: *container_python36
    steps:
      - checkout
      - *restore_repo
      - *save_repo
      - *restore_dependencies36
      - run:
          name: Install virtualenv
          command: pip install --user virtualenv
      - run:
          name: Install dependencies
          command: |
            ~/.local/bin/virtualenv ~/venv36
            . ~/venv36/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
      - save_cache:
          key: v0-dependencies36-{{ checksum "requirements.txt"}}
          paths:
            - ~/venv36
      - add_ssh_keys:
          fingerprints:
            - "3a:8d:f7:0d:de:79:98:bc:56:10:83:ab:c1:ee:3d:30"
      - run :
          name: Run tests
          environment:
            LOCALSTACK_HOST: localstack
          command: |
            git ls-remote --tags origin
            . ~/venv36/bin/activate
            nosetests -v --with-coverage --cover-package cumulus_process

  deploy:
    <<: *container_python36
    steps:
      - checkout
      - *restore_repo
      - *restore_dependencies36
      - add_ssh_keys:
          fingerprints:
            - "3a:8d:f7:0d:de:79:98:bc:56:10:83:ab:c1:ee:3d:30"
      - run:
          name: Push tag to github
          command: |
            git config user.name "Dvseed"
            git config user.email "info@developmentseed.org"
            git config commit.gpgsign "false"
            VERSION=`awk -F\' '{print $2,$4}' cumulus_process/version.py`

            # Only tag and release if the version doesn't already exist
            if [ -z $(git ls-remote --tags origin | grep $VERSION) ]; then
              git tag $VERSION
              echo "Pushing tag ${VERSION}"
              git push origin $VERSION
            fi
      - run:
          name: Deploy to PyPi
          command: |
            . ~/venv36/bin/activate
            pip install twine
            python setup.py sdist
            twine upload --skip-existing --username "${PYPI_USER}" --password "${PYPI_PASS}" dist/*
  testdeploy:
    <<: *container_python36
    steps:
      - checkout
      - *restore_repo
      - *restore_dependencies36
      - add_ssh_keys:
          fingerprints:
            - "3a:8d:f7:0d:de:79:98:bc:56:10:83:ab:c1:ee:3d:30"
      - run:
          name: Push tag to github
          command: |
            VERSION=`awk -F\' '{print $2,$4}' cumulus_process/version.py`
            echo "got ${VERSION} version"
            # Only tag and release if the version doesn't already exist
            if [ -z $(git ls-remote --tags origin | grep $VERSION) ]; then
              VERSION=0.0.2
              git tag $VERSION 
              echo "Pushing tag ${VERSION}"
              git push origin $VERSION
            fi

workflows:
  version: 2
  build_test_36_deploy:
    jobs:
      - install_and_test_36
      - deploy:
          requires:
            - install_and_test_36
          filters:
            branches:
              only: master
      - testdeploy
