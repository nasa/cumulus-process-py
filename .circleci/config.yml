# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2


references:

  container: &container
    docker:
      - image: docker:17.05.0-ce-git
    working_dir: ~/project

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  restore_cache: &restore_cache
    restore_cache:
      keys: 
        - v1-{{ .Branch }}
      paths:
        - /caches/project.tar

  create_env: &create_env
    run:
      name: Creating .env
      command: |
        echo "AWS_REGION=us-west-2" >> .env
        echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env
        echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env      


jobs:

  setup_and_checkout_code:
    <<: *container
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project

  build_and_test_image:
    <<: *container
    steps:  
      - *restore_repo
      - *restore_cache
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/project.tar | true
      - run: 
          name: Build docker image
          command: |
            docker build --cache-from=developmentseed/cumulus:base -t developmentseed/cumulus:base .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/project.tar developmentseed/cumulus
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/project.tar
      - *create_env
      - run:
          name: Run tests
          command: |
            docker run --env-file .env -t developmentseed/cumulus:base  nosetests /build/cumulus-py/test -v -s

  deploy:
    <<: *container
    steps:
      - *restore_repo
      - *restore_cache
      - *create_env
      - setup_remote_docker
      - add_ssh_keys
      - run:
          name: Push tag to github
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            VERSION=`awk -F\' '{print $2,$4}' cumulus/version.py`
            git tag $VERSION
            git push origin $VERSION     
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/project.tar | true
      - run: 
          name: Build docker image
          command: |
            docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
            docker build --cache-from=developmentseed/cumulus:base -t developmentseed/cumulus:base .       
      - run:
          name: Push image to Docker Hub
          command: |
            docker push developmentseed/cumulus:base

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - setup_and_checkout_code
      - build_and_test_image:
          requires:
            - setup_and_checkout_code
      - deploy:
          requires:
            - build_and_test_image
          filters:
            branches:
              only: master